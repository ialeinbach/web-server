daemon off;         # Supervisor can only manage foreground processes.
pid /run/nginx.pid; # PID file location.

worker_processes auto; # Use a reasonable number of worker processes.
user nginx www-data;   # Worker processes run as user www-data.

error_log /dev/stderr;

http {
	access_log /dev/stdout;

	# Load balance across two uwsgi sockets behind each of which is a ready and
	# listening uWSGI server.
	upstream backend {
		server unix:/run/uwsgi.sock;
	}

	server_tokens off;  # Don't include Nginx version info in responses.
	include mime.types; # Be aware of various filetypes.
	charset utf-8;      # Specify charset in Content-Type header field.
	gzip off;           # https://en.wikipedia.org/wiki/BREACH

	server {
		include include/server_name.conf;

		#
		# Configuration
		#

		# Listen for both HTTP and HTTPS requests.
		listen 80;
		listen 443 ssl;

		include include/ssl.conf;

		# https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
		# https://www.ssl.com/article/guide-to-tls-standards-compliance/
		# https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers on;

		# https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765
		sendfile    on;
		tcp_nodelay on;
		tcp_nopush  on;

		#
		# Routing
		#

		root /static;

		location = / {
			try_files /index.html =404;
		}

		location = /favicon.ico {
#			log_not_found off;
			return 204;
		}

		location / {
			try_files $uri @backend;
		}

		location @backend {
			include uwsgi_params;
			uwsgi_pass backend;
		}
	}
}

events {
	use epoll;
}
